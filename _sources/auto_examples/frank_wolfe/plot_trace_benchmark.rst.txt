.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_frank_wolfe_plot_trace_benchmark.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_frank_wolfe_plot_trace_benchmark.py:


Benchmark of Frank-Wolfe variants on low rank modelling
=======================================================

Speed of convergence of different Frank-Wolfe variants on various
problems with a logistic regression loss (:meth:`cp.utils.LogLoss`)
and a L1 ball constraint (:meth:`cp.utils.L1Ball`).



.. code-block:: pytb

    Traceback (most recent call last):
      File "/usr/local/google/home/pedregosa/anaconda3/lib/python3.6/site-packages/sphinx_gallery/gen_rst.py", line 474, in _memory_usage
        multiprocess=True)
      File "/usr/local/google/home/pedregosa/anaconda3/lib/python3.6/site-packages/memory_profiler.py", line 336, in memory_usage
        returned = f(*args, **kw)
      File "/usr/local/google/home/pedregosa/anaconda3/lib/python3.6/site-packages/sphinx_gallery/gen_rst.py", line 465, in __call__
        exec(self.code, self.globals)
      File "/usr/local/google/home/pedregosa/dev/copt/examples/frank_wolfe/plot_trace_benchmark.py", line 18, in <module>
        1/0
    ZeroDivisionError: division by zero





.. code-block:: default

    import copt as cp
    import matplotlib.pylab as plt
    import numpy as np
    from spotlight.datasets.movielens import get_movielens_dataset
    from spotlight.cross_validation import random_train_test_split

    dataset = get_movielens_dataset(variant='100K').tocsr()

    1/0

    def huber(X):
      pass

    # .. datasets and their loading functions ..
    datasets = [
        ("Gisette", cp.datasets.load_gisette),
        ("RCV1", cp.datasets.load_rcv1),
        ("Madelon", cp.datasets.load_madelon),
        ("Covtype", cp.datasets.load_covtype)
        ]

    variants_fw = [
        ["adaptive", "adaptive step-size", "s"],
        ["adaptive2", "scipy linesearch step-size", "^"],
        ["adaptive2+", "linesearch+ step-size", "s"],
        ["adaptive3", "adaptive3 step-size", "+"],
        ["adaptive4", "adaptive4 step-size", "x"],
        ["adaptive5", "adaptive5 step-size", ">"],
        ["DR", "Lipschitz step-size", "<"]]

    for dataset_title, load_data in datasets:
      plt.figure()
      print("Running on the %s dataset" % dataset_title)

      X, y = load_data()
      n_samples, n_features = X.shape

      # the size of the constraint set. We set it to
      # (for example) n_features / 2
      l1_ball = cp.utils.L1Ball(n_features / 2.)
      f = cp.utils.LogLoss(X, y)
      x0 = np.zeros(n_features)

      for step_size, label, marker in variants_fw:

        cb = cp.utils.Trace(f)
        cp.minimize_frank_wolfe(
            f.f_grad,
            x0,
            l1_ball.lmo,
            callback=cb,
            step_size=step_size,
            lipschitz=f.lipschitz,
            max_iter=1000
        )

        plt.plot(cb.trace_time, cb.trace_fx, label=label, marker=marker,
                 markevery=10)
      plt.legend()
      plt.xlabel("Time (in seconds)")
      plt.ylabel("Objective function")
      plt.title(dataset_title)
      plt.tight_layout()  # otherwise the right y-label is slightly clipped
      plt.xlim((0, 0.7 * cb.trace_time[-1]))  # for aesthetics
      plt.grid()
      plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.158 seconds)

**Estimated memory usage:**  9 MB


.. _sphx_glr_download_auto_examples_frank_wolfe_plot_trace_benchmark.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_trace_benchmark.py <plot_trace_benchmark.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_trace_benchmark.ipynb <plot_trace_benchmark.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
